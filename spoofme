#!/usr/bin/env bash
# Description: Spoof both hostname and MAC address on Linux
# Usage: spoof-me.sh [interface1 interface2 ...]
# If no interface is given, detects and uses all physical wired/wireless interfaces.

set -euo pipefail

# Function: auto-detect real (non-virtual) network interfaces
__detect_physical_interfaces() {
  local detected=()

  for iface in /sys/class/net/*; do
    local dev=$(basename "$iface")

    # Skip virtual, loopback, docker, and bridge interfaces
    if [[ "$(readlink -f "$iface")" == *"/virtual/"* ]] || [[ "$dev" == lo ]] || [[ "$dev" == br* ]] || [[ "$dev" == docker* ]]; then
      continue
    fi

    # Check for wireless
    if [[ -d "$iface/wireless" ]]; then
      detected+=("$dev")
      continue
    fi

    # Check for typical physical ethernet interfaces
    if ethtool "$dev" &>/dev/null; then
      detected+=("$dev")
    fi
  done

  echo "${detected[@]}"
}

# Use CLI args or detected interfaces
interfaces=("${@:-$(__detect_physical_interfaces)}")

__set_random_hostname() {
  local prefix="" # Sets the hostname prefix. E.g. 'server' to get 'server-#####'. The script will ignore if empty
  local random_size=16

  local new_hostname
  if [ -n "$prefix" ]; then
    new_hostname="$(echo "$prefix" | sed -e 's/[^[:alnum:]]//g')-$(head -n1 < <(fold -w${random_size} < <(tr -cd 'a-z0-9' < /dev/urandom)))"
  else
    new_hostname="$(head -n1 < <(fold -w${random_size} < <(tr -cd 'a-z0-9' < /dev/urandom)))"
  fi

  new_hostname=${new_hostname:0:63}

  echo "[+] Setting hostname to: $new_hostname"
  hostnamectl set-hostname "$new_hostname"
  sed -i "/^127\.0\.1\.1\s/c\127.0.1.1       $new_hostname" /etc/hosts
}

__spoof_mac_address() {
  local iface="$1"

  if ! ip link show "$iface" &>/dev/null; then
    echo "[-] Interface $iface does not exist. Skipping."
    return
  fi

  echo "[+] Spoofing MAC address for $iface..."
  ip link set dev "$iface" down
  macchanger -r "$iface" | grep -E 'New MAC|Current MAC'
  ip link set dev "$iface" up
}

__spoof_me() {
  echo "[*] Spoofing hostname and MAC addresses..."
  __set_random_hostname

  for iface in "${interfaces[@]}"; do
    __spoof_mac_address "$iface"
  done

  echo "[âœ“] All done!"
}

__spoof_me
